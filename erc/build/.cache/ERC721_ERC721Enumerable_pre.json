{
    "functions": [
        {
            "def": "function totalSupply() external view returns (uint256);",
            "raw_rules": "    /// @notice Count NFTs tracked by this contract\n    /// @return A count of valid NFTs tracked by this contract, where each one of\n    ///  them has an assigned and queryable owner not equal to the zero address\n",
            "format": {
                "name": "totalSupply",
                "arg_types": [],
                "optional": null,
                "view": true,
                "pure": false,
                "payable": false,
                "return_type": {
                    "type": "uint256"
                }
            }
        },
        {
            "def": "function tokenByIndex(uint256 _index) external view returns (uint256);",
            "raw_rules": "\n    /// @notice Enumerate valid NFTs\n    /// @dev Throws if `_index` >= `totalSupply()`.\n    /// @param _index A counter less than `totalSupply()`\n    /// @return The token identifier for the `_index`th NFT,\n    ///  (sort order not specified)\n",
            "format": {
                "name": "tokenByIndex",
                "arg_types": [
                    {
                        "name": "_index",
                        "type": "uint256"
                    }
                ],
                "optional": null,
                "view": true,
                "pure": false,
                "payable": false,
                "return_type": {
                    "type": "uint256"
                }
            }
        },
        {
            "def": "function tokenOfOwnerByIndex(address _owner, uint256 _index) external view returns (uint256);",
            "raw_rules": "\n    /// @notice Enumerate NFTs assigned to an owner\n    /// @dev Throws if `_index` >= `balanceOf(_owner)` or if\n    ///  `_owner` is the zero address, representing invalid NFTs.\n    /// @param _owner An address where we are interested in NFTs owned by them\n    /// @param _index A counter less than `balanceOf(_owner)`\n    /// @return The token identifier for the `_index`th NFT assigned to `_owner`,\n    ///   (sort order not specified)\n",
            "format": {
                "name": "tokenOfOwnerByIndex",
                "arg_types": [
                    {
                        "name": "_owner",
                        "type": "address"
                    },
                    {
                        "name": "_index",
                        "type": "uint256"
                    }
                ],
                "optional": null,
                "view": true,
                "pure": false,
                "payable": false,
                "return_type": {
                    "type": "uint256"
                }
            }
        }
    ],
    "events": [],
    "name": "ERC721Enumerable"
}