{
    "functions": [
        {
            "def": "function name() external view returns (string _name);",
            "raw_rules": "    /// @notice A descriptive name for a collection of NFTs in this contract\n",
            "format": {
                "name": "name",
                "arg_types": [],
                "optional": null,
                "view": true,
                "pure": false,
                "payable": false,
                "return_type": {
                    "name": "_name",
                    "type": "string"
                }
            }
        },
        {
            "def": "function symbol() external view returns (string _symbol);",
            "raw_rules": "\n    /// @notice An abbreviated name for NFTs in this contract\n",
            "format": {
                "name": "symbol",
                "arg_types": [],
                "optional": null,
                "view": true,
                "pure": false,
                "payable": false,
                "return_type": {
                    "name": "_symbol",
                    "type": "string"
                }
            }
        },
        {
            "def": "function tokenURI(uint256 _tokenId) external view returns (string);",
            "raw_rules": "\n    /// @notice A distinct Uniform Resource Identifier (URI) for a given asset.\n    /// @dev Throws if `_tokenId` is not a valid NFT. URIs are defined in RFC\n    ///  3986. The URI may point to a JSON file that conforms to the \"ERC721\n    ///  Metadata JSON Schema\".\n",
            "format": {
                "name": "tokenURI",
                "arg_types": [
                    {
                        "name": "_tokenId",
                        "type": "uint256"
                    }
                ],
                "optional": null,
                "view": true,
                "pure": false,
                "payable": false,
                "return_type": {
                    "type": "string"
                }
            }
        }
    ],
    "events": [],
    "name": "ERC721Metadata"
}