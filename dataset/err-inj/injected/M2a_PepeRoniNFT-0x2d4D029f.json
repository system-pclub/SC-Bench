{
    "erc": "721",
    "contract": "M2a_PepeRoniNFT",
    "inj_file": "dataset/err-inj/injected/M2a_PepeRoniNFT-0x2d4D029f.sol",
    "orig_file": "dataset/err-inj/origin/M2a_PepeRoniNFT-0x2d4D029f.sol",
    "inj_errors": [
        {
            "config": [
                "throw",
                {
                    "function": "safeTransferFrom",
                    "numofargs": 4,
                    "rule": " throw if `_from` is not the current owner",
                    "fn_params": [
                        0
                    ],
                    "severity": "high"
                }
            ],
            "lines": [
                {
                    "orig_range": [
                        1342,
                        1342
                    ],
                    "to_replace": []
                },
                {
                    "orig_range": [
                        1194,
                        1194
                    ],
                    "to_replace": []
                },
                {
                    "orig_range": [
                        1336,
                        1336
                    ],
                    "to_replace": []
                }
            ]
        },
        {
            "config": [
                "interface",
                {
                    "function": "isApprovedForAll",
                    "numofargs": 2,
                    "rule": "function isApprovedForAll(address _owner, address _operator) external view returns (bool);",
                    "severity": "medium"
                }
            ],
            "lines": [
                {
                    "orig_range": [
                        1145,
                        1147
                    ],
                    "to_replace": []
                },
                {
                    "orig_range": [
                        970,
                        970
                    ],
                    "to_replace": []
                }
            ]
        },
        {
            "config": [
                "interface",
                {
                    "function": "getApproved",
                    "numofargs": 1,
                    "rule": "function getApproved(uint256 _tokenId) external view returns (address);",
                    "severity": "medium"
                }
            ],
            "lines": [
                {
                    "orig_range": [
                        1129,
                        1133
                    ],
                    "to_replace": []
                },
                {
                    "orig_range": [
                        963,
                        963
                    ],
                    "to_replace": []
                }
            ]
        }
    ],
    "compile_error": "compile error Invalid compilation: \nInvalid solc compilation Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> dataset/err-inj/injected/M2a_PepeRoniNFT-0x2d4D029f.sol\n\nWarning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> dataset/err-inj/injected/M2a_PepeRoniNFT-0x2d4D029f.sol:247:5:\n    |\n247 |     function log2(uint256 value) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\nWarning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> dataset/err-inj/injected/M2a_PepeRoniNFT-0x2d4D029f.sol:289:5:\n    |\n289 |     function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\nWarning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> dataset/err-inj/injected/M2a_PepeRoniNFT-0x2d4D029f.sol:247:5:\n    |\n247 |     function log2(uint256 value) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\nWarning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> dataset/err-inj/injected/M2a_PepeRoniNFT-0x2d4D029f.sol:289:5:\n    |\n289 |     function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\nWarning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> dataset/err-inj/injected/M2a_PepeRoniNFT-0x2d4D029f.sol:247:5:\n    |\n247 |     function log2(uint256 value) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\nWarning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> dataset/err-inj/injected/M2a_PepeRoniNFT-0x2d4D029f.sol:289:5:\n    |\n289 |     function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\nError: Undeclared identifier.\n    --> dataset/err-inj/injected/M2a_PepeRoniNFT-0x2d4D029f.sol:1117:38:\n     |\n1117 |             _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n     |                                      ^^^^^^^^^^^^^^^^\n\nError: Undeclared identifier.\n    --> dataset/err-inj/injected/M2a_PepeRoniNFT-0x2d4D029f.sol:1214:37:\n     |\n1214 |         return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n     |                                     ^^^^^^^^^^^^^^^^\n\nError: Undeclared identifier.\n    --> dataset/err-inj/injected/M2a_PepeRoniNFT-0x2d4D029f.sol:1214:73:\n     |\n1214 |         return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n     |                                                                         ^^^^^^^^^^^\n\n"
}