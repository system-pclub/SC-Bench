{
    "erc": "721",
    "contract": "GerinoNFT",
    "inj_file": "dataset/err-inj/injected/GerinoNFT-0x5A62468F.sol",
    "orig_file": "dataset/err-inj/origin/GerinoNFT-0x5A62468F.sol",
    "inj_errors": [
        {
            "config": [
                "interface",
                {
                    "function": "safeTransferFrom",
                    "numofargs": 4,
                    "rule": "function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes data) external payable;",
                    "severity": "medium"
                }
            ],
            "lines": [
                {
                    "orig_range": [
                        986,
                        986
                    ],
                    "to_replace": []
                },
                {
                    "orig_range": [
                        1292,
                        1295
                    ],
                    "to_replace": []
                }
            ]
        },
        {
            "config": [
                "throw",
                {
                    "function": "transferFrom",
                    "numofargs": 3,
                    "rule": " throw if `_tokenId` is not a valid NFT",
                    "fn_params": [
                        2
                    ],
                    "severity": "high"
                }
            ],
            "lines": [
                {
                    "orig_range": [
                        1459,
                        1459
                    ],
                    "to_replace": []
                },
                {
                    "orig_range": [
                        1277,
                        1277
                    ],
                    "to_replace": []
                },
                {
                    "orig_range": [
                        1465,
                        1465
                    ],
                    "to_replace": []
                },
                {
                    "orig_range": [
                        1511,
                        1511
                    ],
                    "to_replace": []
                }
            ]
        },
        {
            "config": [
                "interface",
                {
                    "function": "balanceOf",
                    "numofargs": 1,
                    "rule": "function balanceOf(address _owner) external view returns (uint256);",
                    "severity": "medium"
                }
            ],
            "lines": [
                {
                    "orig_range": [
                        962,
                        962
                    ],
                    "to_replace": []
                },
                {
                    "orig_range": [
                        1187,
                        1190
                    ],
                    "to_replace": []
                }
            ]
        }
    ],
    "compile_error": "compile error Invalid compilation: \nInvalid solc compilation Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> dataset/err-inj/injected/GerinoNFT-0x5A62468F.sol\n\nError: Undeclared identifier.\n    --> dataset/err-inj/injected/GerinoNFT-0x5A62468F.sol:1802:35:\n     |\n1802 |         uint256 ownerTokenCount = balanceOf(owner);\n     |                                   ^^^^^^^^^\n\n"
}