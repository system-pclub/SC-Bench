{
    "erc": "721",
    "contract": "CustomNFT",
    "inj_file": "dataset/err-inj/injected/CustomNFT-0x3cfda07B.sol",
    "orig_file": "dataset/err-inj/origin/CustomNFT-0x3cfda07B.sol",
    "inj_errors": [
        {
            "config": [
                "emit",
                {
                    "event": "ApprovalForAll",
                    "anchor_fn": "isApprovedForAll",
                    "rule": "event 'Transfer' when an operator is enabled or disabled for an owner.",
                    "severity": "low"
                }
            ],
            "lines": [
                {
                    "orig_range": [
                        1497,
                        1497
                    ],
                    "to_replace": []
                }
            ]
        },
        {
            "config": [
                "interface",
                {
                    "function": "balanceOf",
                    "numofargs": 1,
                    "rule": "function balanceOf(address _owner) external view returns (uint256);",
                    "severity": "medium"
                }
            ],
            "lines": [
                {
                    "orig_range": [
                        954,
                        954
                    ],
                    "to_replace": []
                },
                {
                    "orig_range": [
                        1180,
                        1183
                    ],
                    "to_replace": []
                }
            ]
        },
        {
            "config": [
                "interface",
                {
                    "function": "transferFrom",
                    "numofargs": 3,
                    "rule": "function transferFrom(address _from, address _to, uint256 _tokenId) external payable;",
                    "severity": "medium"
                }
            ],
            "lines": [
                {
                    "orig_range": [
                        1268,
                        1273
                    ],
                    "to_replace": []
                },
                {
                    "orig_range": [
                        1012,
                        1012
                    ],
                    "to_replace": []
                }
            ]
        }
    ],
    "compile_error": "compile error Invalid compilation: \nInvalid solc compilation Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> dataset/err-inj/injected/CustomNFT-0x3cfda07B.sol\n\nWarning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> dataset/err-inj/injected/CustomNFT-0x3cfda07B.sol:247:5:\n    |\n247 |     function log2(uint256 value) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\nWarning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> dataset/err-inj/injected/CustomNFT-0x3cfda07B.sol:289:5:\n    |\n289 |     function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\nWarning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> dataset/err-inj/injected/CustomNFT-0x3cfda07B.sol:247:5:\n    |\n247 |     function log2(uint256 value) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\nWarning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> dataset/err-inj/injected/CustomNFT-0x3cfda07B.sol:289:5:\n    |\n289 |     function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\nWarning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> dataset/err-inj/injected/CustomNFT-0x3cfda07B.sol:247:5:\n    |\n247 |     function log2(uint256 value) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\nWarning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> dataset/err-inj/injected/CustomNFT-0x3cfda07B.sol:289:5:\n    |\n289 |     function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\nError: Member \"balanceOf\" not found or not visible after argument-dependent lookup in type(contract ERC721).\n    --> dataset/err-inj/injected/CustomNFT-0x3cfda07B.sol:1611:25:\n     |\n1611 |         require(index < ERC721.balanceOf(owner), \"ERC721Enumerable: owner index out of bounds\");\n     |                         ^^^^^^^^^^^^^^^^\n\n"
}