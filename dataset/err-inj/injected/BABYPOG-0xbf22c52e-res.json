{
    "method1": {
        "llm_res": [
            {
                "rule": "The `safeTransferFrom` function must check if `_to` is a smart contract and if so, it must call `onERC721Received` on `_to` and throw if the return value is not `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.",
                "function": "_checkOnERC721Received"
            },
            {
                "rule": "The function `symbol()` should return the symbol of the token. E.g., 'HIX'.",
                "function": "symbol"
            },
            {
                "rule": "transfer: Transfers _value amount of tokens to address _to, and MUST fire the Transfer event. The function SHOULD throw if the message caller\u2019s account balance does not have enough tokens to spend. Note Transfers of 0 values MUST be treated as normal transfers and fire the Transfer event.",
                "function": "transfer"
            }
        ]
    },
    "method2": {
        "llm_res": [
            "NO",
            "YES",
            "NO"
        ],
        "can_detect": [
            false,
            true,
            false
        ],
        "error": [
            null,
            null,
            null
        ]
    },
    "method3": {
        "llm_res": [
            "NO",
            "YES",
            "YES"
        ],
        "can_detect": [
            false,
            true,
            true
        ],
        "error": [
            null,
            null,
            null
        ]
    }
}