{
    "method1": {
        "llm_res": [
            {
                "rule": "The function decimals() should return the number of decimals the token uses.",
                "function": "decimals"
            },
            {
                "rule": "The function transfer(address _to, uint256 _value) should transfer _value amount of tokens to address _to, and MUST fire the Transfer event.",
                "function": "transfer"
            },
            {
                "rule": "The function transferFrom(address _from, address _to, uint256 _value) should transfer _value amount of tokens from address _from to address _to, and MUST fire the Transfer event.",
                "function": "transferFrom"
            },
            {
                "rule": "The function approve(address _spender, uint256 _value) should allow _spender to withdraw from your account multiple times, up to the _value amount.",
                "function": "approve"
            },
            {
                "rule": "The function allowance(address _owner, address _spender) should return the amount which _spender is still allowed to withdraw from _owner.",
                "function": "allowance"
            },
            {
                "rule": "The event Transfer should trigger when tokens are transferred, including zero value transfers.",
                "function": "_transfer"
            },
            {
                "rule": "The event Approval should trigger on any successful call to approve(address _spender, uint256 _value).",
                "function": "_approve"
            }
        ]
    },
    "method2": {
        "llm_res": [
            "NO",
            "NO",
            "NO"
        ],
        "can_detect": [
            false,
            false,
            false
        ],
        "error": [
            null,
            null,
            null
        ]
    },
    "method3": {
        "llm_res": [
            "YES",
            "NO",
            "YES"
        ],
        "can_detect": [
            true,
            true,
            true
        ],
        "error": [
            null,
            null,
            null
        ]
    }
}