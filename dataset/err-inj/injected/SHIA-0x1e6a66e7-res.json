{
    "method1": {
        "llm_res": [
            {
                "rule": "transferFrom: Transfers _value amount of tokens from address _from to address _to, and MUST fire the Transfer event. The transferFrom method is used for a withdraw workflow, allowing contracts to transfer tokens on your behalf. This can be used for example to allow a contract to transfer tokens on your behalf and/or to charge fees in sub-currencies. The function SHOULD throw unless the _from account has deliberately authorized the sender of the message via some mechanism.",
                "function": "transferFrom"
            },
            {
                "rule": "NFTs assigned to the zero address are considered invalid, and queries about them do throw.",
                "function": "Ensure that functions like balanceOf, ownerOf throw for zero address."
            },
            {
                "rule": "Every NFT is identified by a unique uint256 ID inside the ERC-721 smart contract. This identifying number SHALL NOT change for the life of the contract.",
                "function": "Potential violation in token ID handling, ensure immutability and uniqueness."
            },
            {
                "rule": "decimals - Returns the number of decimals the token uses - e.g. 8, means to divide the token amount by 100000000 to get its user representation. OPTIONAL - This method can be used to improve usability, but interfaces and other contracts MUST NOT expect these values to be present.",
                "function": "decimals"
            }
        ]
    },
    "method2": {
        "llm_res": [],
        "can_detect": [],
        "error": []
    },
    "method3": {
        "llm_res": [],
        "can_detect": [],
        "error": []
    }
}