{
    "erc": "20",
    "contract": "Token",
    "inj_file": "dataset/err-inj/injected/Token-0xa48b11ec.sol",
    "orig_file": "dataset/err-inj/origin/Token-0xa48b11ec.sol",
    "inj_errors": [
        {
            "config": [
                "return",
                {
                    "function": "allowance",
                    "numofargs": 2,
                    "rule": "the amount which _spender is still allowed to withdraw from _owner",
                    "severity": "medium"
                }
            ],
            "lines": [
                {
                    "orig_range": [
                        953,
                        953
                    ],
                    "to_replace": [
                        "        return _allowances[owner][spender]+935;"
                    ]
                }
            ]
        },
        {
            "config": [
                "interface",
                {
                    "function": "transferFrom",
                    "numofargs": 3,
                    "rule": "function transferFrom(address _from, address _to, uint256 _value) public returns (bool success)",
                    "severity": "medium"
                }
            ],
            "lines": [
                {
                    "orig_range": [
                        962,
                        967
                    ],
                    "to_replace": []
                },
                {
                    "orig_range": [
                        874,
                        874
                    ],
                    "to_replace": []
                }
            ]
        },
        {
            "config": [
                "emit",
                {
                    "rule": " SHOULD trigger a Transfer event with the _from address set to 0x0 when tokens are created",
                    "event": "Transfer",
                    "anchor_fn": "totalSupply",
                    "severity": "low"
                }
            ],
            "lines": [
                {
                    "orig_range": [
                        1018,
                        1018
                    ],
                    "to_replace": []
                }
            ]
        }
    ],
    "compile_error": "compile error Invalid compilation: \nInvalid solc compilation Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> dataset/err-inj/injected/Token-0xa48b11ec.sol\n\nError: Member \"transferFrom\" not found or not visible after argument-dependent lookup in contract ERC20.\n    --> dataset/err-inj/injected/Token-0xa48b11ec.sol:1181:9:\n     |\n1181 |         ERC20(address(this)).transferFrom(address(_tokenDistributor), address(this), balanceOf(address(_tokenDistributor)));\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
}