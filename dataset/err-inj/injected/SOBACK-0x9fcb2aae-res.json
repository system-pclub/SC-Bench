{
    "method1": {
        "llm_res": [
            {
                "rule": "name function should return the name of the token.",
                "function": "name()"
            },
            {
                "rule": "symbol function should return the symbol of the token.",
                "function": "symbol()"
            },
            {
                "rule": "decimals function should return the number of decimals the token uses.",
                "function": "decimals()"
            },
            {
                "rule": "transfer function should throw if the message caller\u2019s account balance does not have enough tokens to spend.",
                "function": "_transfer()"
            },
            {
                "rule": "Transfers of 0 values MUST be treated as normal transfers and fire the Transfer event.",
                "function": "_transfer()"
            },
            {
                "rule": "approve function should overwrite the current allowance with _value.",
                "function": "approve()"
            },
            {
                "rule": "Clients SHOULD make sure to create user interfaces in such a way that they set the allowance first to 0 before setting it to another value for the same spender.",
                "function": "approve()"
            }
        ]
    },
    "method2": {
        "llm_res": [
            "NO",
            "NO",
            "NO"
        ],
        "can_detect": [
            false,
            false,
            false
        ],
        "error": [
            null,
            null,
            null
        ]
    },
    "method3": {
        "llm_res": [
            "NO",
            "YES",
            "YES"
        ],
        "can_detect": [
            true,
            true,
            true
        ],
        "error": [
            null,
            null,
            null
        ]
    }
}