{
    "method1": {
        "llm_res": [
            {
                "rule": "The `onERC721Received` function must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.",
                "function": "_checkOnERC721Received"
            },
            {
                "rule": "Transfers _value amount of tokens to address _to, and MUST fire the Transfer event. The function SHOULD throw if the message caller\u2019s account balance does not have enough tokens to spend.",
                "function": "transfer(address _from, address _to, uint256 _wad)"
            },
            {
                "rule": "The function `symbol` should return the symbol of the token. E.g. \"HIX\". OPTIONAL - This method can be used to improve usability, but interfaces and other contracts MUST NOT expect these values to be present.",
                "function": "symbol"
            },
            {
                "rule": "The `allowance` function should return the amount which _spender is still allowed to withdraw from _owner.",
                "function": "allowance"
            }
        ]
    },
    "method2": {
        "llm_res": [
            "NO",
            "NO",
            "NO"
        ],
        "can_detect": [
            false,
            false,
            false
        ],
        "error": [
            null,
            null,
            null
        ]
    },
    "method3": {
        "llm_res": [
            "NO",
            "NO",
            "NO"
        ],
        "can_detect": [
            false,
            true,
            true
        ],
        "error": [
            null,
            null,
            null
        ]
    }
}