{
    "method1": {
        "llm_res": [
            {
                "rule": "Either `TransferSingle` or `TransferBatch` MUST emit when tokens are transferred, including zero value transfers as well as minting or burning.",
                "function": "airdrop"
            },
            {
                "rule": "The `_operator` argument MUST be the address of an account/contract that is approved to make the transfer (SHOULD be msg.sender).",
                "function": "airdrop"
            },
            {
                "rule": "The `_from` argument MUST be the address of the holder whose balance is decreased.",
                "function": "airdrop"
            },
            {
                "rule": "The `_to` argument MUST be the address of the recipient whose balance is increased.",
                "function": "airdrop"
            },
            {
                "rule": "The `_id` argument MUST be the token type being transferred.",
                "function": "airdrop"
            },
            {
                "rule": "The `_value` argument MUST be the number of tokens the holder balance is decreased by and match what the recipient balance is increased by.",
                "function": "airdrop"
            },
            {
                "rule": "When minting/creating tokens, the `_from` argument MUST be set to `0x0` (i.e. zero address).",
                "function": "airdrop"
            },
            {
                "rule": "When burning/destroying tokens, the `_to` argument MUST be set to `0x0` (i.e. zero address).",
                "function": "airdrop"
            }
        ]
    },
    "method2": {
        "llm_res": [
            "NO",
            "NO",
            "NO"
        ],
        "can_detect": [
            false,
            false,
            false
        ],
        "error": [
            null,
            null,
            null
        ]
    },
    "method3": {
        "llm_res": [
            "NO",
            "NO",
            "NO"
        ],
        "can_detect": [
            false,
            false,
            false
        ],
        "error": [
            null,
            null,
            null
        ]
    }
}