{
    "erc": "20",
    "contract": "COKE",
    "inj_file": "dataset/err-inj/injected/COKE-0x286ef5b6.sol",
    "orig_file": "dataset/err-inj/origin/COKE-0x286ef5b6.sol",
    "inj_errors": [
        {
            "config": [
                "interface",
                {
                    "function": "approve",
                    "numofargs": 2,
                    "rule": "function approve(address _spender, uint256 _value) public returns (bool success)",
                    "severity": "medium"
                }
            ],
            "lines": [
                {
                    "orig_range": [
                        208,
                        211
                    ],
                    "to_replace": []
                },
                {
                    "orig_range": [
                        28,
                        28
                    ],
                    "to_replace": []
                }
            ]
        },
        {
            "config": [
                "interface",
                {
                    "function": "balanceOf",
                    "numofargs": 1,
                    "rule": "function balanceOf(address _owner) public view returns (uint256 balance)",
                    "severity": "medium"
                }
            ],
            "lines": [
                {
                    "orig_range": [
                        25,
                        25
                    ],
                    "to_replace": []
                },
                {
                    "orig_range": [
                        195,
                        197
                    ],
                    "to_replace": []
                }
            ]
        },
        {
            "config": [
                "return",
                {
                    "function": "allowance",
                    "numofargs": 2,
                    "rule": "the amount which _spender is still allowed to withdraw from _owner",
                    "severity": "medium"
                }
            ],
            "lines": [
                {
                    "orig_range": [
                        205,
                        205
                    ],
                    "to_replace": [
                        "        return _allowances[owner][spender]+431;"
                    ]
                }
            ]
        }
    ],
    "compile_error": "compile error Invalid compilation: \nInvalid solc compilation Error: Undeclared identifier.\n   --> dataset/err-inj/injected/COKE-0x286ef5b6.sol:236:25:\n    |\n236 |                 require(balanceOf(to) + amount <= _maxWalletSize, \"Exceeds the maxWalletSize.\");\n    |                         ^^^^^^^^^\n\nError: Undeclared identifier.\n   --> dataset/err-inj/injected/COKE-0x286ef5b6.sol:247:44:\n    |\n247 |             uint256 contractTokenBalance = balanceOf(address(this));\n    |                                            ^^^^^^^^^\n\nError: Undeclared identifier.\n   --> dataset/err-inj/injected/COKE-0x286ef5b6.sol:321:86:\n    |\n321 |         uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this), balanceOf(address(this)),0, 0, owner(), block.timestamp);\n    |                                                                                      ^^^^^^^^^\n\nError: Undeclared identifier.\n   --> dataset/err-inj/injected/COKE-0x286ef5b6.sol:331:30:\n    |\n331 |         uint256 tokenBalance=balanceOf(address(this));\n    |                              ^^^^^^^^^\n\n"
}